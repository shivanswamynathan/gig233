# Generated by Django 5.2.3 on 2025-07-08 09:11

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('document_processing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GrnSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grn_number', models.CharField(db_index=True, help_text='Unique GRN number', max_length=200, unique=True, verbose_name='GRN Number')),
                ('po_number', models.CharField(db_index=True, help_text='Purchase Order Number', max_length=200, verbose_name='PO Number')),
                ('supplier_name', models.CharField(db_index=True, help_text='Supplier/vendor name', max_length=500, verbose_name='Supplier Name')),
                ('grn_created_date', models.DateField(blank=True, help_text='Date when GRN was created', null=True, verbose_name='GRN Created Date')),
                ('supplier_invoice_date', models.DateField(blank=True, help_text='Date of supplier invoice', null=True, verbose_name='Supplier Invoice Date')),
                ('seller_invoice_number', models.CharField(blank=True, help_text='Invoice number from seller', max_length=200, null=True, verbose_name='Seller Invoice Number')),
                ('pickup_location', models.CharField(blank=True, help_text='Pickup location name', max_length=500, null=True, verbose_name='Pickup Location')),
                ('pickup_gstin', models.CharField(blank=True, help_text='GST Identification Number for pickup location', max_length=15, null=True, verbose_name='Pickup GSTIN')),
                ('pickup_city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pickup City')),
                ('pickup_state', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pickup State')),
                ('delivery_location', models.CharField(blank=True, help_text='Delivery location name', max_length=500, null=True, verbose_name='Delivery Location')),
                ('delivery_gstin', models.CharField(blank=True, help_text='GST Identification Number for delivery location', max_length=15, null=True, verbose_name='Delivery GSTIN')),
                ('delivery_city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Delivery City')),
                ('delivery_state', models.CharField(blank=True, max_length=255, null=True, verbose_name='Delivery State')),
                ('total_items_count', models.IntegerField(default=0, help_text='Number of line items in this GRN', verbose_name='Total Items Count')),
                ('total_received_quantity', models.DecimalField(blank=True, decimal_places=4, help_text='Sum of all received quantities', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0000'))], verbose_name='Total Received Quantity')),
                ('total_subtotal', models.DecimalField(blank=True, decimal_places=2, help_text='Sum of all subtotals before tax', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Subtotal')),
                ('total_cgst_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Sum of all CGST amounts', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total CGST Amount')),
                ('total_sgst_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Sum of all SGST amounts', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total SGST Amount')),
                ('total_igst_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Sum of all IGST amounts', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total IGST Amount')),
                ('total_tax_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Sum of all tax amounts', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Tax Amount')),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Sum of all total amounts including taxes', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Amount')),
                ('created_by', models.CharField(blank=True, help_text='Person who created the GRN', max_length=255, null=True, verbose_name='Created By')),
                ('concerned_person', models.CharField(blank=True, help_text='Person responsible for the transaction', max_length=255, null=True, verbose_name='Concerned Person')),
                ('upload_batch_id', models.CharField(db_index=True, help_text='Batch ID from ItemWiseGrn upload', max_length=100, verbose_name='Upload Batch ID')),
                ('is_reconciled', models.BooleanField(default=False, help_text='Whether this GRN has been reconciled with invoices', verbose_name='Is Reconciled')),
                ('reconciliation_status', models.CharField(choices=[('pending', 'Pending'), ('matched', 'Matched'), ('variance', 'Variance Found'), ('no_invoice', 'No Invoice Found')], default='pending', max_length=50, verbose_name='Reconciliation Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('last_aggregated_at', models.DateTimeField(blank=True, help_text='When the aggregation was last calculated', null=True, verbose_name='Last Aggregated At')),
            ],
            options={
                'verbose_name': 'GRN Summary',
                'verbose_name_plural': 'GRN Summaries',
                'db_table': 'grn_summary',
                'ordering': ['-grn_created_date', 'grn_number'],
                'indexes': [models.Index(fields=['grn_number'], name='grn_summary_grn_num_5588b6_idx'), models.Index(fields=['po_number'], name='grn_summary_po_numb_e635e5_idx'), models.Index(fields=['supplier_name'], name='grn_summary_supplie_f974de_idx'), models.Index(fields=['pickup_gstin'], name='grn_summary_pickup__30dce4_idx'), models.Index(fields=['seller_invoice_number'], name='grn_summary_seller__18edac_idx'), models.Index(fields=['grn_created_date'], name='grn_summary_grn_cre_07e73b_idx'), models.Index(fields=['reconciliation_status'], name='grn_summary_reconci_69ff64_idx'), models.Index(fields=['upload_batch_id'], name='grn_summary_upload__747096_idx')],
            },
        ),
    ]
